var n=class{$source;$method(e,...s){return console.log("$METHOD",e),this.$source[e](...s),this}$set(e,s){if(typeof e=="string")this.$source[e]=s;else if(typeof e=="object")Object.assign(this.$source,e);else throw new Error("Unknown $set type - need a string/object");return this}$value(){return this.$source}$proxy(){let e=this;return new Proxy(e,{get(s,t){return console.log(">GET",t),console.log("HAS",`$${t}`,"?",`$${t}`in e),t.startsWith("$")?e[t]:t in e.$source&&typeof e.$source[t]=="function"?e.$method.bind(e,t):`$${t}`in e?e[`$${t}`]:void 0}})}constructor(e){this.$source=e}};function r(o){return new n(o).$proxy()}export{n as Chainable,r as default};
